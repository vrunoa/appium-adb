"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _chai = _interopRequireDefault(require("chai"));

var _chaiAsPromised = _interopRequireDefault(require("chai-as-promised"));

var _adb = _interopRequireDefault(require("../../lib/adb.js"));

var _path = _interopRequireDefault(require("path"));

var _teen_process = require("teen_process");

var _appiumSupport = require("appium-support");

var _helpers = require("../../lib/helpers.js");

const selendroidTestApp = _path.default.resolve(_helpers.rootDir, 'test', 'fixtures', 'selendroid-test-app.apk'),
      contactManagerPath = _path.default.resolve(_helpers.rootDir, 'test', 'fixtures', 'ContactManager.apk'),
      unsignJar = _path.default.resolve(_helpers.rootDir, 'jars', 'unsign.jar'),
      tmp = _appiumSupport.system.isWindows() ? 'C:\\Windows\\Temp' : '/tmp',
      keystorePath = _path.default.resolve(_helpers.rootDir, 'test', 'fixtures', 'appiumtest.keystore'),
      keyAlias = 'appiumtest';

_chai.default.use(_chaiAsPromised.default);

describe('Apk-signing', function () {
  let adb;

  let unsignApk = function () {
    var _ref = (0, _asyncToGenerator2.default)(function* (apk) {
      yield (0, _teen_process.exec)('java', ['-jar', unsignJar, apk]);
    });

    return function unsignApk(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  before((0, _asyncToGenerator2.default)(function* () {
    adb = yield _adb.default.createADB();
  }));
  it('checkApkCert should return false for unsigned apk', (0, _asyncToGenerator2.default)(function* () {
    yield unsignApk(selendroidTestApp);
    (yield adb.checkApkCert(selendroidTestApp, 'io.selendroid.testapp')).should.be.false;
  }));
  it('checkApkCert should return true for signed apk', (0, _asyncToGenerator2.default)(function* () {
    (yield adb.checkApkCert(contactManagerPath, 'com.example.android.contactmanager')).should.be.true;
  }));
  it('signWithDefaultCert should sign apk', (0, _asyncToGenerator2.default)(function* () {
    yield unsignApk(selendroidTestApp);
    yield adb.signWithDefaultCert(selendroidTestApp);
    (yield adb.checkApkCert(selendroidTestApp, 'io.selendroid.testapp')).should.be.true;
  }));
  it('signWithCustomCert should sign apk with custom certificate', (0, _asyncToGenerator2.default)(function* () {
    yield unsignApk(selendroidTestApp);
    adb.keystorePath = keystorePath;
    adb.keyAlias = keyAlias;
    adb.useKeystore = true;
    adb.keystorePassword = 'android';
    adb.keyPassword = 'android';
    adb.tmpDir = tmp;
    yield adb.signWithCustomCert(selendroidTestApp);
    (yield adb.checkCustomApkCert(selendroidTestApp, 'io.selendroid.testapp')).should.be.true;
  }));
});require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9hcGstc2lnbmluZy1lMmUtc3BlY3MuanMiXSwibmFtZXMiOlsic2VsZW5kcm9pZFRlc3RBcHAiLCJwYXRoIiwicmVzb2x2ZSIsInJvb3REaXIiLCJjb250YWN0TWFuYWdlclBhdGgiLCJ1bnNpZ25KYXIiLCJ0bXAiLCJzeXN0ZW0iLCJpc1dpbmRvd3MiLCJrZXlzdG9yZVBhdGgiLCJrZXlBbGlhcyIsImNoYWkiLCJ1c2UiLCJjaGFpQXNQcm9taXNlZCIsImRlc2NyaWJlIiwiYWRiIiwidW5zaWduQXBrIiwiYXBrIiwiYmVmb3JlIiwiQURCIiwiY3JlYXRlQURCIiwiaXQiLCJjaGVja0Fwa0NlcnQiLCJzaG91bGQiLCJiZSIsImZhbHNlIiwidHJ1ZSIsInNpZ25XaXRoRGVmYXVsdENlcnQiLCJ1c2VLZXlzdG9yZSIsImtleXN0b3JlUGFzc3dvcmQiLCJrZXlQYXNzd29yZCIsInRtcERpciIsInNpZ25XaXRoQ3VzdG9tQ2VydCIsImNoZWNrQ3VzdG9tQXBrQ2VydCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBR0EsTUFBTUEsaUJBQWlCLEdBQUdDLGNBQUtDLE9BQUwsQ0FBYUMsZ0JBQWIsRUFBc0IsTUFBdEIsRUFDYSxVQURiLEVBQ3lCLHlCQUR6QixDQUExQjtBQUFBLE1BRU1DLGtCQUFrQixHQUFHSCxjQUFLQyxPQUFMLENBQWFDLGdCQUFiLEVBQXNCLE1BQXRCLEVBQ2EsVUFEYixFQUN5QixvQkFEekIsQ0FGM0I7QUFBQSxNQUlNRSxTQUFTLEdBQUdKLGNBQUtDLE9BQUwsQ0FBYUMsZ0JBQWIsRUFBc0IsTUFBdEIsRUFBOEIsWUFBOUIsQ0FKbEI7QUFBQSxNQUtNRyxHQUFHLEdBQUdDLHNCQUFPQyxTQUFQLEtBQXFCLG1CQUFyQixHQUEyQyxNQUx2RDtBQUFBLE1BTU1DLFlBQVksR0FBR1IsY0FBS0MsT0FBTCxDQUFhQyxnQkFBYixFQUFzQixNQUF0QixFQUNhLFVBRGIsRUFDeUIscUJBRHpCLENBTnJCO0FBQUEsTUFRTU8sUUFBUSxHQUFHLFlBUmpCOztBQVVBQyxjQUFLQyxHQUFMLENBQVNDLHVCQUFUOztBQUVBQyxRQUFRLENBQUMsYUFBRCxFQUFnQixZQUFZO0FBQ2xDLE1BQUlDLEdBQUo7O0FBQ0EsTUFBSUMsU0FBUztBQUFBLCtDQUFHLFdBQU9DLEdBQVAsRUFBZTtBQUFFLFlBQU0sd0JBQUssTUFBTCxFQUFhLENBQUMsTUFBRCxFQUFTWixTQUFULEVBQW9CWSxHQUFwQixDQUFiLENBQU47QUFBK0MsS0FBbkU7O0FBQUEsb0JBQVRELFNBQVM7QUFBQTtBQUFBO0FBQUEsS0FBYjs7QUFFQUUsRUFBQUEsTUFBTSxpQ0FBQyxhQUFrQjtBQUN2QkgsSUFBQUEsR0FBRyxTQUFTSSxhQUFJQyxTQUFKLEVBQVo7QUFDRCxHQUZLLEVBQU47QUFHQUMsRUFBQUEsRUFBRSxDQUFDLG1EQUFELGtDQUFzRCxhQUFrQjtBQUN4RSxVQUFNTCxTQUFTLENBQUNoQixpQkFBRCxDQUFmO0FBQ0EsV0FBT2UsR0FBRyxDQUFDTyxZQUFKLENBQWlCdEIsaUJBQWpCLEVBQW9DLHVCQUFwQyxDQUFQLEVBQXFFdUIsTUFBckUsQ0FBNEVDLEVBQTVFLENBQStFQyxLQUEvRTtBQUNELEdBSEMsRUFBRjtBQUlBSixFQUFBQSxFQUFFLENBQUMsZ0RBQUQsa0NBQW1ELGFBQWtCO0FBQ3JFLFdBQU9OLEdBQUcsQ0FBQ08sWUFBSixDQUFpQmxCLGtCQUFqQixFQUFxQyxvQ0FBckMsQ0FBUCxFQUFtRm1CLE1BQW5GLENBQTBGQyxFQUExRixDQUE2RkUsSUFBN0Y7QUFDRCxHQUZDLEVBQUY7QUFHQUwsRUFBQUEsRUFBRSxDQUFDLHFDQUFELGtDQUF3QyxhQUFrQjtBQUMxRCxVQUFNTCxTQUFTLENBQUNoQixpQkFBRCxDQUFmO0FBQ0EsVUFBT2UsR0FBRyxDQUFDWSxtQkFBSixDQUF3QjNCLGlCQUF4QixDQUFQO0FBQ0EsV0FBT2UsR0FBRyxDQUFDTyxZQUFKLENBQWlCdEIsaUJBQWpCLEVBQW9DLHVCQUFwQyxDQUFQLEVBQXFFdUIsTUFBckUsQ0FBNEVDLEVBQTVFLENBQStFRSxJQUEvRTtBQUNELEdBSkMsRUFBRjtBQUtBTCxFQUFBQSxFQUFFLENBQUMsNERBQUQsa0NBQStELGFBQWtCO0FBQ2pGLFVBQU1MLFNBQVMsQ0FBQ2hCLGlCQUFELENBQWY7QUFDQWUsSUFBQUEsR0FBRyxDQUFDTixZQUFKLEdBQW1CQSxZQUFuQjtBQUNBTSxJQUFBQSxHQUFHLENBQUNMLFFBQUosR0FBZUEsUUFBZjtBQUNBSyxJQUFBQSxHQUFHLENBQUNhLFdBQUosR0FBa0IsSUFBbEI7QUFDQWIsSUFBQUEsR0FBRyxDQUFDYyxnQkFBSixHQUF1QixTQUF2QjtBQUNBZCxJQUFBQSxHQUFHLENBQUNlLFdBQUosR0FBa0IsU0FBbEI7QUFDQWYsSUFBQUEsR0FBRyxDQUFDZ0IsTUFBSixHQUFhekIsR0FBYjtBQUNBLFVBQU9TLEdBQUcsQ0FBQ2lCLGtCQUFKLENBQXVCaEMsaUJBQXZCLENBQVA7QUFDQSxXQUFPZSxHQUFHLENBQUNrQixrQkFBSixDQUF1QmpDLGlCQUF2QixFQUEwQyx1QkFBMUMsQ0FBUCxFQUEyRXVCLE1BQTNFLENBQWtGQyxFQUFsRixDQUFxRkUsSUFBckY7QUFDRCxHQVZDLEVBQUY7QUFXRCxDQTlCTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNoYWkgZnJvbSAnY2hhaSc7XG5pbXBvcnQgY2hhaUFzUHJvbWlzZWQgZnJvbSAnY2hhaS1hcy1wcm9taXNlZCc7XG5pbXBvcnQgQURCIGZyb20gJy4uLy4uL2xpYi9hZGIuanMnO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgeyBleGVjIH0gZnJvbSAndGVlbl9wcm9jZXNzJztcbmltcG9ydCB7IHN5c3RlbSB9IGZyb20gJ2FwcGl1bS1zdXBwb3J0JztcbmltcG9ydCB7IHJvb3REaXIgfSBmcm9tICcuLi8uLi9saWIvaGVscGVycy5qcyc7XG5cblxuY29uc3Qgc2VsZW5kcm9pZFRlc3RBcHAgPSBwYXRoLnJlc29sdmUocm9vdERpciwgJ3Rlc3QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2ZpeHR1cmVzJywgJ3NlbGVuZHJvaWQtdGVzdC1hcHAuYXBrJyksXG4gICAgICBjb250YWN0TWFuYWdlclBhdGggPSBwYXRoLnJlc29sdmUocm9vdERpciwgJ3Rlc3QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdmaXh0dXJlcycsICdDb250YWN0TWFuYWdlci5hcGsnKSxcbiAgICAgIHVuc2lnbkphciA9IHBhdGgucmVzb2x2ZShyb290RGlyLCAnamFycycsICd1bnNpZ24uamFyJyksXG4gICAgICB0bXAgPSBzeXN0ZW0uaXNXaW5kb3dzKCkgPyAnQzpcXFxcV2luZG93c1xcXFxUZW1wJyA6ICcvdG1wJyxcbiAgICAgIGtleXN0b3JlUGF0aCA9IHBhdGgucmVzb2x2ZShyb290RGlyLCAndGVzdCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2ZpeHR1cmVzJywgJ2FwcGl1bXRlc3Qua2V5c3RvcmUnKSxcbiAgICAgIGtleUFsaWFzID0gJ2FwcGl1bXRlc3QnO1xuXG5jaGFpLnVzZShjaGFpQXNQcm9taXNlZCk7XG5cbmRlc2NyaWJlKCdBcGstc2lnbmluZycsIGZ1bmN0aW9uICgpIHtcbiAgbGV0IGFkYjtcbiAgbGV0IHVuc2lnbkFwayA9IGFzeW5jIChhcGspID0+IHsgYXdhaXQgZXhlYygnamF2YScsIFsnLWphcicsIHVuc2lnbkphciwgYXBrXSk7IH07XG5cbiAgYmVmb3JlKGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICBhZGIgPSBhd2FpdCBBREIuY3JlYXRlQURCKCk7XG4gIH0pO1xuICBpdCgnY2hlY2tBcGtDZXJ0IHNob3VsZCByZXR1cm4gZmFsc2UgZm9yIHVuc2lnbmVkIGFwaycsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICBhd2FpdCB1bnNpZ25BcGsoc2VsZW5kcm9pZFRlc3RBcHApO1xuICAgIChhd2FpdCBhZGIuY2hlY2tBcGtDZXJ0KHNlbGVuZHJvaWRUZXN0QXBwLCAnaW8uc2VsZW5kcm9pZC50ZXN0YXBwJykpLnNob3VsZC5iZS5mYWxzZTtcbiAgfSk7XG4gIGl0KCdjaGVja0Fwa0NlcnQgc2hvdWxkIHJldHVybiB0cnVlIGZvciBzaWduZWQgYXBrJywgYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIChhd2FpdCBhZGIuY2hlY2tBcGtDZXJ0KGNvbnRhY3RNYW5hZ2VyUGF0aCwgJ2NvbS5leGFtcGxlLmFuZHJvaWQuY29udGFjdG1hbmFnZXInKSkuc2hvdWxkLmJlLnRydWU7XG4gIH0pO1xuICBpdCgnc2lnbldpdGhEZWZhdWx0Q2VydCBzaG91bGQgc2lnbiBhcGsnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgYXdhaXQgdW5zaWduQXBrKHNlbGVuZHJvaWRUZXN0QXBwKTtcbiAgICAoYXdhaXQgYWRiLnNpZ25XaXRoRGVmYXVsdENlcnQoc2VsZW5kcm9pZFRlc3RBcHApKTtcbiAgICAoYXdhaXQgYWRiLmNoZWNrQXBrQ2VydChzZWxlbmRyb2lkVGVzdEFwcCwgJ2lvLnNlbGVuZHJvaWQudGVzdGFwcCcpKS5zaG91bGQuYmUudHJ1ZTtcbiAgfSk7XG4gIGl0KCdzaWduV2l0aEN1c3RvbUNlcnQgc2hvdWxkIHNpZ24gYXBrIHdpdGggY3VzdG9tIGNlcnRpZmljYXRlJywgYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIGF3YWl0IHVuc2lnbkFwayhzZWxlbmRyb2lkVGVzdEFwcCk7XG4gICAgYWRiLmtleXN0b3JlUGF0aCA9IGtleXN0b3JlUGF0aDtcbiAgICBhZGIua2V5QWxpYXMgPSBrZXlBbGlhcztcbiAgICBhZGIudXNlS2V5c3RvcmUgPSB0cnVlO1xuICAgIGFkYi5rZXlzdG9yZVBhc3N3b3JkID0gJ2FuZHJvaWQnO1xuICAgIGFkYi5rZXlQYXNzd29yZCA9ICdhbmRyb2lkJztcbiAgICBhZGIudG1wRGlyID0gdG1wO1xuICAgIChhd2FpdCBhZGIuc2lnbldpdGhDdXN0b21DZXJ0KHNlbGVuZHJvaWRUZXN0QXBwKSk7XG4gICAgKGF3YWl0IGFkYi5jaGVja0N1c3RvbUFwa0NlcnQoc2VsZW5kcm9pZFRlc3RBcHAsICdpby5zZWxlbmRyb2lkLnRlc3RhcHAnKSkuc2hvdWxkLmJlLnRydWU7XG4gIH0pO1xufSk7XG4iXSwiZmlsZSI6InRlc3QvZnVuY3Rpb25hbC9hcGstc2lnbmluZy1lMmUtc3BlY3MuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4ifQ==
