"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _chai = _interopRequireDefault(require("chai"));

var _chaiAsPromised = _interopRequireDefault(require("chai-as-promised"));

_chai.default.use(_chaiAsPromised.default);

describe.skip('ADB To be implemented methods', function () {
  it('restart', (0, _asyncToGenerator2.default)(function* () {}));
  it('stopLogcatstartLogcat', (0, _asyncToGenerator2.default)(function* () {}));
  it('getLogcatLogs', (0, _asyncToGenerator2.default)(function* () {}));
  it('getPIDsByName', (0, _asyncToGenerator2.default)(function* () {}));
  it('killProcessesByName', (0, _asyncToGenerator2.default)(function* () {}));
  it('killProcessByPID', (0, _asyncToGenerator2.default)(function* () {}));
  it('broadcastProcessEnd', (0, _asyncToGenerator2.default)(function* () {}));
  it('broadcast', (0, _asyncToGenerator2.default)(function* () {}));
  it('endAndroidCoverage', (0, _asyncToGenerator2.default)(function* () {}));
  it('androidCoverage', (0, _asyncToGenerator2.default)(function* () {}));
  it('instrument', (0, _asyncToGenerator2.default)(function* () {}));
  it('reboot', (0, _asyncToGenerator2.default)(function* () {}));
});require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvYWRiLXNwZWNzLmpzIl0sIm5hbWVzIjpbImNoYWkiLCJ1c2UiLCJjaGFpQXNQcm9taXNlZCIsImRlc2NyaWJlIiwic2tpcCIsIml0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7QUFDQTs7QUFHQUEsY0FBS0MsR0FBTCxDQUFTQyx1QkFBVDs7QUFFQUMsUUFBUSxDQUFDQyxJQUFULENBQWMsK0JBQWQsRUFBK0MsWUFBWTtBQXFDekRDLEVBQUFBLEVBQUUsQ0FBQyxTQUFELGtDQUFZLGFBQWtCLENBQUcsQ0FBakMsRUFBRjtBQUNBQSxFQUFBQSxFQUFFLENBQUMsdUJBQUQsa0NBQTBCLGFBQWtCLENBQUcsQ0FBL0MsRUFBRjtBQUNBQSxFQUFBQSxFQUFFLENBQUMsZUFBRCxrQ0FBa0IsYUFBa0IsQ0FBRyxDQUF2QyxFQUFGO0FBQ0FBLEVBQUFBLEVBQUUsQ0FBQyxlQUFELGtDQUFrQixhQUFrQixDQUFHLENBQXZDLEVBQUY7QUFDQUEsRUFBQUEsRUFBRSxDQUFDLHFCQUFELGtDQUF3QixhQUFrQixDQUFHLENBQTdDLEVBQUY7QUFDQUEsRUFBQUEsRUFBRSxDQUFDLGtCQUFELGtDQUFxQixhQUFrQixDQUFHLENBQTFDLEVBQUY7QUFHQUEsRUFBQUEsRUFBRSxDQUFDLHFCQUFELGtDQUF3QixhQUFrQixDQUFHLENBQTdDLEVBQUY7QUFDQUEsRUFBQUEsRUFBRSxDQUFDLFdBQUQsa0NBQWMsYUFBa0IsQ0FBRyxDQUFuQyxFQUFGO0FBQ0FBLEVBQUFBLEVBQUUsQ0FBQyxvQkFBRCxrQ0FBdUIsYUFBa0IsQ0FBRyxDQUE1QyxFQUFGO0FBQ0FBLEVBQUFBLEVBQUUsQ0FBQyxpQkFBRCxrQ0FBb0IsYUFBa0IsQ0FBRyxDQUF6QyxFQUFGO0FBU0FBLEVBQUFBLEVBQUUsQ0FBQyxZQUFELGtDQUFlLGFBQWtCLENBQUcsQ0FBcEMsRUFBRjtBQTZCQUEsRUFBQUEsRUFBRSxDQUFDLFFBQUQsa0NBQVcsYUFBa0IsQ0FBRyxDQUFoQyxFQUFGO0FBRUQsQ0F4RkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcbmltcG9ydCBjaGFpQXNQcm9taXNlZCBmcm9tICdjaGFpLWFzLXByb21pc2VkJztcblxuXG5jaGFpLnVzZShjaGFpQXNQcm9taXNlZCk7XG5cbmRlc2NyaWJlLnNraXAoJ0FEQiBUbyBiZSBpbXBsZW1lbnRlZCBtZXRob2RzJywgZnVuY3Rpb24gKCkge1xuXG4gIC8vIGl0KCdwcm9jZXNzRnJvbU1hbmlmZXN0JywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ3BhY2thZ2VBbmRMYXVuY2hBY3Rpdml0eUZyb21NYW5pZmVzdCcsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCdwcm9jZXNzRXhpc3RzJywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ2NvbXBpbGVNYW5pZmVzdCcsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCdpbnNlcnRNYW5pZmVzdCcsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCdzaWduV2l0aERlZmF1bHRDZXJ0JywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ3NpZ25XaXRoQ3VzdG9tQ2VydCcsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCdzaWduJywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ3ppcEFsaWduQXBrJywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ2NoZWNrQXBrQ2VydCcsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCdjaGVja0N1c3RvbUFwa0NlcnQnLCBhc3luYyAoKSA9PiB7IH0pO1xuICAvLyBpdCgnZ2V0S2V5c3RvcmVNZDUnLCBhc3luYyAoKSA9PiB7IH0pO1xuICAvLyBpdCgnY2hlY2tBcGtLZXlzdG9yZU1hdGNoJywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ2dldERldmljZXNXaXRoUmV0cnknLCBhc3luYyAoKSA9PiB7IH0pO1xuICAvLyBpdCgnZ2V0QXBpTGV2ZWwnLCBhc3luYyAoKSA9PiB7IH0pO1xuICAvLyBpdCgnZ2V0RW11bGF0b3JQb3J0JywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ3JpbXJhZicsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCdwdXNoJywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ3B1bGwnLCBhc3luYyAoKSA9PiB7IH0pO1xuICAvLyBpdCgnZ2V0UG9ydEZyb21FbXVsYXRvclN0cmluZycsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCdnZXRSdW5uaW5nQVZEJywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ2dldFJ1bm5pbmdBVkRXaXRoUmV0cnknLCBhc3luYyAoKSA9PiB7IH0pO1xuICAvLyBpdCgna2lsbEFsbEVtdWxhdG9ycycsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCdsYXVuY2hBVkQnLCBhc3luYyAoKSA9PiB7IH0pO1xuICAvLyBpdCgnd2FpdEZvckVtdWxhdG9yUmVhZHknLCBhc3luYyAoKSA9PiB7IH0pO1xuICAvLyBpdCgnZ2V0Q29ubmVjdGVkRGV2aWNlcycsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCdnZXRDb25uZWN0ZWRFbXVsYXRvcnMnLCBhc3luYyAoKSA9PiB7IH0pO1xuICAvLyBpdCgnZm9yd2FyZFBvcnQnLCBhc3luYyAoKSA9PiB7IH0pO1xuICAvLyBpdCgnZm9yd2FyZEFic3RyYWN0UG9ydCcsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCdpc0RldmljZUNvbm5lY3RlZCcsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCdwaW5nJywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ3NldERldmljZUlkJywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ3NldEVtdWxhdG9yUG9ydCcsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCd3YWl0Rm9yRGV2aWNlJywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ3Jlc3RhcnRBZGInLCBhc3luYyAoKSA9PiB7IH0pO1xuICBpdCgncmVzdGFydCcsIGFzeW5jIGZ1bmN0aW9uICgpIHsgfSk7XG4gIGl0KCdzdG9wTG9nY2F0c3RhcnRMb2djYXQnLCBhc3luYyBmdW5jdGlvbiAoKSB7IH0pO1xuICBpdCgnZ2V0TG9nY2F0TG9ncycsIGFzeW5jIGZ1bmN0aW9uICgpIHsgfSk7XG4gIGl0KCdnZXRQSURzQnlOYW1lJywgYXN5bmMgZnVuY3Rpb24gKCkgeyB9KTtcbiAgaXQoJ2tpbGxQcm9jZXNzZXNCeU5hbWUnLCBhc3luYyBmdW5jdGlvbiAoKSB7IH0pO1xuICBpdCgna2lsbFByb2Nlc3NCeVBJRCcsIGFzeW5jIGZ1bmN0aW9uICgpIHsgfSk7XG4gIC8vIGl0KCdzdGFydEFwcCcsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCdpc1ZhbGlkQ2xhc3MnLCBhc3luYyAoKSA9PiB7IH0pO1xuICBpdCgnYnJvYWRjYXN0UHJvY2Vzc0VuZCcsIGFzeW5jIGZ1bmN0aW9uICgpIHsgfSk7XG4gIGl0KCdicm9hZGNhc3QnLCBhc3luYyBmdW5jdGlvbiAoKSB7IH0pO1xuICBpdCgnZW5kQW5kcm9pZENvdmVyYWdlJywgYXN5bmMgZnVuY3Rpb24gKCkgeyB9KTtcbiAgaXQoJ2FuZHJvaWRDb3ZlcmFnZScsIGFzeW5jIGZ1bmN0aW9uICgpIHsgfSk7XG4gIC8vIGl0KCdnZXRGb2N1c2VkUGFja2FnZUFuZEFjdGl2aXR5JywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ3dhaXRGb3JBY3Rpdml0eU9yTm90JywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ3dhaXRGb3JBY3Rpdml0eScsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCd3YWl0Rm9yTm90QWN0aXZpdHknLCBhc3luYyAoKSA9PiB7IH0pO1xuICAvLyBpdCgndW5pbnN0YWxsQXBrJywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ2luc3RhbGxSZW1vdGUnLCBhc3luYyAoKSA9PiB7IH0pO1xuICAvLyBpdCgnaW5zdGFsbCcsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCdta2RpcicsIGFzeW5jICgpID0+IHsgfSk7XG4gIGl0KCdpbnN0cnVtZW50JywgYXN5bmMgZnVuY3Rpb24gKCkgeyB9KTtcbiAgLy8gVE9ETyBzaG91bGQgZGVwcmVjYXRlIG5vdCB1c2VkIGluIGFwcGl1bVxuICAvLyBpdCgnY2hlY2tBbmRTaWduQXBrJywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ2ZvcmNlU3RvcCcsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCdjbGVhcicsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCdzdG9wQW5kQ2xlYXInLCBhc3luYyAoKSA9PiB7IH0pO1xuICAvLyBpdCgnaXNBcHBJbnN0YWxsZWQnLCBhc3luYyAoKSA9PiB7IH0pO1xuICAvLyBpdCgnbG9jaycsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCdiYWNrJywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ2dvVG9Ib21lJywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ2tleWV2ZW50JywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ2lzU2NyZWVuTG9ja2VkJywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ2lzU29mdEtleWJvYXJkUHJlc2VudCcsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCdzZW5kVGVsbmV0Q29tbWFuZCcsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCdpc0VtdWxhdG9yJywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ2lzQWlycGxhbmVNb2RlT24nLCBhc3luYyAoKSA9PiB7IH0pO1xuICAvLyBpdCgnc2V0QWlycGxhbmVNb2RlJywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ2Jyb2FkY2FzdEFpcnBsYW5lTW9kZScsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCdpc1dpZmlPbicsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCdzZXRXaWZpJywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ2lzRGF0YU9uJywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ3NldERhdGEnLCBhc3luYyAoKSA9PiB7IH0pO1xuICAvLyBpdCgnc2V0V2lmaUFuZERhdGEnLCBhc3luYyAoKSA9PiB7IH0pO1xuICAvLyBpdCgnYXZhaWxhYmxlSU1FcycsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCdkZWZhdWx0SU1FJywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ2VuYWJsZUlNRScsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCdkaXNhYmxlSU1FJywgYXN5bmMgKCkgPT4geyB9KTtcbiAgLy8gaXQoJ3NldElNRScsIGFzeW5jICgpID0+IHsgfSk7XG4gIC8vIGl0KCdoYXNJbnRlcm5ldFBlcm1pc3Npb25Gcm9tTWFuaWZlc3QnLCBhc3luYyAoKSA9PiB7IH0pO1xuICBpdCgncmVib290JywgYXN5bmMgZnVuY3Rpb24gKCkgeyB9KTtcbiAgLy8gaXQoJ2dldEFkYlNlcnZlclBvcnQnLCBhc3luYyAoKSA9PiB7IH0pO1xufSk7XG4iXSwiZmlsZSI6InRlc3QvYWRiLXNwZWNzLmpzIiwic291cmNlUm9vdCI6Ii4uLy4uIn0=
